package com.napptilus.willywonka.commonsui.compose.theme.providers

import androidx.compose.material3.ColorScheme
import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.runtime.Composable
import androidx.compose.ui.graphics.Color

private val DefaultLightColorPalette = lightColorScheme()
private val DefaultDarkColorPalette = darkColorScheme()

data class ThemeColors(
    val primary: Color,
    val onPrimary: Color,
    val primaryContainer: Color,
    val onPrimaryContainer: Color,
    val inversePrimary: Color,
    val secondary: Color,
    val onSecondary: Color,
    val secondaryContainer: Color,
    val onSecondaryContainer: Color,
    val tertiary: Color,
    val onTertiary: Color,
    val tertiaryContainer: Color,
    val onTertiaryContainer: Color,
    val background: Color,
    val onBackground: Color,
    val surface: Color,
    val onSurface: Color,
    val surfaceVariant: Color,
    val onSurfaceVariant: Color,
    val surfaceTint: Color,
    val inverseSurface: Color,
    val inverseOnSurface: Color,
    val error: Color,
    val onError: Color,
    val errorContainer: Color,
    val onErrorContainer: Color,
    val outline: Color,
    val outlineVariant: Color,
    val scrim: Color,
) {
    companion object
}

@Suppress("LongParameterList")
fun ThemeColors.Companion.buildLight(
    primary: Color = DefaultLightColorPalette.primary,
    onPrimary: Color = DefaultLightColorPalette.onPrimary,
    primaryContainer: Color = DefaultLightColorPalette.primaryContainer,
    onPrimaryContainer: Color = DefaultLightColorPalette.onPrimaryContainer,
    inversePrimary: Color = DefaultLightColorPalette.inversePrimary,
    secondary: Color = DefaultLightColorPalette.secondary,
    onSecondary: Color = DefaultLightColorPalette.onSecondary,
    secondaryContainer: Color = DefaultLightColorPalette.secondaryContainer,
    onSecondaryContainer: Color = DefaultLightColorPalette.onSecondaryContainer,
    tertiary: Color = DefaultLightColorPalette.tertiary,
    onTertiary: Color = DefaultLightColorPalette.onTertiary,
    tertiaryContainer: Color = DefaultLightColorPalette.tertiaryContainer,
    onTertiaryContainer: Color = DefaultLightColorPalette.onTertiaryContainer,
    background: Color = DefaultLightColorPalette.background,
    onBackground: Color = DefaultLightColorPalette.onBackground,
    surface: Color = DefaultLightColorPalette.surface,
    onSurface: Color = DefaultLightColorPalette.onSurface,
    surfaceVariant: Color = DefaultLightColorPalette.surfaceVariant,
    onSurfaceVariant: Color = DefaultLightColorPalette.onSurfaceVariant,
    surfaceTint: Color = DefaultLightColorPalette.surfaceTint,
    inverseSurface: Color = DefaultLightColorPalette.inverseSurface,
    inverseOnSurface: Color = DefaultLightColorPalette.inverseOnSurface,
    error: Color = DefaultLightColorPalette.error,
    onError: Color = DefaultLightColorPalette.onError,
    errorContainer: Color = DefaultLightColorPalette.errorContainer,
    onErrorContainer: Color = DefaultLightColorPalette.onErrorContainer,
    outline: Color = DefaultLightColorPalette.outline,
    outlineVariant: Color = DefaultLightColorPalette.outlineVariant,
    scrim: Color = DefaultLightColorPalette.scrim,
): ThemeColors = ThemeColors(
    primary = primary,
    onPrimary = onPrimary,
    primaryContainer = primaryContainer,
    onPrimaryContainer = onPrimaryContainer,
    inversePrimary = inversePrimary,
    secondary = secondary,
    onSecondary = onSecondary,
    secondaryContainer = secondaryContainer,
    onSecondaryContainer = onSecondaryContainer,
    tertiary = tertiary,
    onTertiary = onTertiary,
    tertiaryContainer = tertiaryContainer,
    onTertiaryContainer = onTertiaryContainer,
    background = background,
    onBackground = onBackground,
    surface = surface,
    onSurface = onSurface,
    surfaceVariant = surfaceVariant,
    onSurfaceVariant = onSurfaceVariant,
    surfaceTint = surfaceTint,
    inverseSurface = inverseSurface,
    inverseOnSurface = inverseOnSurface,
    error = error,
    onError = onError,
    errorContainer = errorContainer,
    onErrorContainer = onErrorContainer,
    outline = outline,
    outlineVariant = outlineVariant,
    scrim = scrim,
)

@Suppress("LongParameterList")
fun ThemeColors.Companion.buildDark(
    primary: Color = DefaultDarkColorPalette.primary,
    onPrimary: Color = DefaultDarkColorPalette.onPrimary,
    primaryContainer: Color = DefaultDarkColorPalette.primaryContainer,
    onPrimaryContainer: Color = DefaultDarkColorPalette.onPrimaryContainer,
    inversePrimary: Color = DefaultDarkColorPalette.inversePrimary,
    secondary: Color = DefaultDarkColorPalette.secondary,
    onSecondary: Color = DefaultDarkColorPalette.onSecondary,
    secondaryContainer: Color = DefaultDarkColorPalette.secondaryContainer,
    onSecondaryContainer: Color = DefaultDarkColorPalette.onSecondaryContainer,
    tertiary: Color = DefaultDarkColorPalette.tertiary,
    onTertiary: Color = DefaultDarkColorPalette.onTertiary,
    tertiaryContainer: Color = DefaultDarkColorPalette.tertiaryContainer,
    onTertiaryContainer: Color = DefaultDarkColorPalette.onTertiaryContainer,
    background: Color = DefaultDarkColorPalette.background,
    onBackground: Color = DefaultDarkColorPalette.onBackground,
    surface: Color = DefaultDarkColorPalette.surface,
    onSurface: Color = DefaultDarkColorPalette.onSurface,
    surfaceVariant: Color = DefaultDarkColorPalette.surfaceVariant,
    onSurfaceVariant: Color = DefaultDarkColorPalette.onSurfaceVariant,
    surfaceTint: Color = DefaultDarkColorPalette.surfaceTint,
    inverseSurface: Color = DefaultDarkColorPalette.inverseSurface,
    inverseOnSurface: Color = DefaultDarkColorPalette.inverseOnSurface,
    error: Color = DefaultDarkColorPalette.error,
    onError: Color = DefaultDarkColorPalette.onError,
    errorContainer: Color = DefaultDarkColorPalette.errorContainer,
    onErrorContainer: Color = DefaultDarkColorPalette.onErrorContainer,
    outline: Color = DefaultDarkColorPalette.outline,
    outlineVariant: Color = DefaultDarkColorPalette.outlineVariant,
    scrim: Color = DefaultDarkColorPalette.scrim,
): ThemeColors = ThemeColors(
    primary = primary,
    onPrimary = onPrimary,
    primaryContainer = primaryContainer,
    onPrimaryContainer = onPrimaryContainer,
    inversePrimary = inversePrimary,
    secondary = secondary,
    onSecondary = onSecondary,
    secondaryContainer = secondaryContainer,
    onSecondaryContainer = onSecondaryContainer,
    tertiary = tertiary,
    onTertiary = onTertiary,
    tertiaryContainer = tertiaryContainer,
    onTertiaryContainer = onTertiaryContainer,
    background = background,
    onBackground = onBackground,
    surface = surface,
    onSurface = onSurface,
    surfaceVariant = surfaceVariant,
    onSurfaceVariant = onSurfaceVariant,
    surfaceTint = surfaceTint,
    inverseSurface = inverseSurface,
    inverseOnSurface = inverseOnSurface,
    error = error,
    onError = onError,
    errorContainer = errorContainer,
    onErrorContainer = onErrorContainer,
    outline = outline,
    outlineVariant = outlineVariant,
    scrim = scrim,
)

@Composable
fun ThemeColors.toMaterialColors(): ColorScheme =
    ColorScheme(
        primary = primary,
        onPrimary = onPrimary,
        primaryContainer = primaryContainer,
        onPrimaryContainer = onPrimaryContainer,
        inversePrimary = inversePrimary,
        secondary = secondary,
        onSecondary = onSecondary,
        secondaryContainer = secondaryContainer,
        onSecondaryContainer = onSecondaryContainer,
        tertiary = tertiary,
        onTertiary = onTertiary,
        tertiaryContainer = tertiaryContainer,
        onTertiaryContainer = onTertiaryContainer,
        background = background,
        onBackground = onBackground,
        surface = surface,
        onSurface = onSurface,
        surfaceVariant = surfaceVariant,
        onSurfaceVariant = onSurfaceVariant,
        surfaceTint = surfaceTint,
        inverseSurface = inverseSurface,
        inverseOnSurface = inverseOnSurface,
        error = error,
        onError = onError,
        errorContainer = errorContainer,
        onErrorContainer = onErrorContainer,
        outline = outline,
        outlineVariant = outlineVariant,
        scrim = scrim,
    )
